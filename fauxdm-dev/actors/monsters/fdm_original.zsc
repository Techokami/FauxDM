/*
================================================================================
 FauxDM ZScript Code
 
 Author: The Kinsie
 
 Purpose: New and interesting monsters
 
 Comment: 

================================================================================
*/

// Pacifist! Steals items
class FDM_Pacifist : FDM_BaseMonster
{
	Default
	{
		Health 201;
		Radius 16;
		Height 56;
		PainChance 200;
		Monster;
		+FLOORCLIP
		+PICKUP
		+AMBUSH
		speed 4;
		FDM_BaseMonster.TauntSound "actors/oldactors/posstaunt2";
		AttackSound "grunt/attack";
		PainSound "grunt/pain";
		DeathSound "grunt/death";
		ActiveSound "grunt/active";
		Obituary "$OB_PACIFIST";
	}
	
	States
	{
	Spawn:
		PLAY A 10 A_Look;
		goto Roam;
	Roam:
		PLAY AABBCCDD 4 A_FDMRoamNoLook();
		Loop;
	See:
		PLAY AABBCCDD 4 A_FDMChase(null,null);
		Loop;
	Pain:
		PLAY G 3;
		PLAY G 3 A_Pain;
		Goto See;
	Death:
		PLAY H 5;
		PLAY I 5 
		{
			A_Scream();
			A_DropWeapons();
		}
		PLAY J 5 A_NoBlocking;
		PLAY K 5;
		PLAY L -1;
		Stop;
	GiveUp:
		PLAY AG 12;
		loop;
	XDeath:
		GUTS A 0 A_DropWeapons();
		goto Super::XDeath;
	}
	
	override void Tick()
	{
		// A dumb hack so that the monster always picks up health items regardless of need
		if (health >= 201)
		{
			health = 200;
		}
		
		// Target and set goal at some random inventory item, with varying degrees of success
		if (!(target is "Inventory") || !(target is "Weapon"))
		{
			BlockThingsIterator it = BlockThingsIterator.CreateFromPos(pos.x,pos.y,pos.z,0,32,0);
			while (it.Next())
			{
				Actor mo = it.thing;
				
				if (mo is "Inventory" || mo is "Weapon" || !(mo is "FDM_HealthBonus") || !(mo is "FDM_ArmorBonus"))
				{
					target = mo;
					goal = mo;
				}
			}
		}
		
		Super.Tick();
	}
	
	// Blank out target and goals when collecting an item, just to be safe
	override bool CanTouchItem(Inventory item)
	{
		target = null;
		goal = null;
		return true;
	}
	
	override void DoAllianceFlicker()
	{
		bFRIENDLY = 1;
	}
	
	// We don't care about other players, so ignore them as best we can.
	void A_FDMRoamNoLook()
	{
		DoAvoidWallrunning();
		
		A_Wander();
		A_Recoil(-speed);
		oldPos = pos;
	}
	
	// Drop any collected weapons upon death
	void A_DropWeapons()
	{
		if (CheckInventory("FDM_Machinegun", 1))
		{
			A_DropItem ("FDM_Machinegun", -1, 256);
		}

		if (CheckInventory("FDM_Shotgun", 1))
		{
			A_DropItem ("FDM_Shotgun", -1, 256);
		}

		if (CheckInventory("FDM_SuperShotgun", 1))
		{
			A_DropItem ("FDM_SuperShotgun", -1, 256);
		}

		if (CheckInventory("FDM_Chaingun", 1))
		{
			A_DropItem ("FDM_Chaingun", -1, 256);
		}

		if (CheckInventory("FDM_Minigun", 1))
		{
			A_DropItem ("FDM_Minigun", -1, 256);
		}

		if (CheckInventory("FDM_RocketLauncher", 1))
		{
			A_DropItem ("FDM_RocketLauncher", -1, 256);
		}

		if (CheckInventory("FDM_GrenadeLauncher", 1))
		{
			A_DropItem ("FDM_GrenadeLauncher", -1, 256);
		}

		if (CheckInventory("FDM_PlasmaRifle", 1))
		{
			A_DropItem ("FDM_PlasmaRifle", -1, 256);
		}

		if (CheckInventory("FDM_Railgun", 1))
		{
			A_DropItem ("FDM_Railgun", -1, 256);
		}

		if (CheckInventory("FDM_BFG9000", 1))
		{
			A_DropItem ("FDM_BFG9000", -1, 256);
		}

		if (CheckInventory("FDM_Flamethrower", 1))
		{
			A_DropItem ("FDM_Flamethrower", -1, 256);
		}
	}
}