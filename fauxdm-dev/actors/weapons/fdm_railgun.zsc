/*
================================================================================
 FauxDM ZScript Code
 
 Author: The Kinsie, Kodi and Phantombeta
 
 Purpose: Railgun weapon, from Skulltag
 
 Comment:

================================================================================
*/

class FDM_Railgun : FDM_BaseWeapon
{
	Default
	{
		Weapon.SelectionOrder 100;
		Weapon.AmmoUse 10;
		Weapon.AmmoGive 40;
		Weapon.AmmoType "Cell";
		Inventory.PickupMessage "$GOTRAILGUN";
		Obituary "$OB_MPSHOTGUN";
		Tag "$TAGRAILGUN";
		//$Category "Weapons"
		//$Title "Railgun"
		//$NotAngled
		//$Color 14
		decal "StarSoldierPlasmaScorch";
	}
	States
	{
	Ready:
		RAIL A 1 A_WeaponReady;
		Loop;
	Deselect:
		RAIL A 1 A_DeselectionShit();
		"####" A 1 A_WeaponOffset(0,33,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,35,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,39,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,44,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,49,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,55,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,60,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,70,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,80,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,90,WOF_INTERPOLATE);
	FinishDeselect:
		"####" A 0 A_Lower;
		Loop;
	Select:
		RAIL A 1 A_WeaponOffset(0,90,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,80,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,70,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,60,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,55,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,49,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,44,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,39,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,35,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,33,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		"####" A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE);
		goto Ready;
	Fire:
		RAIL A 3;
		RAIL B 1 BRIGHT Offset (0,41)
		{
			A_PlaySound("weapons/railgun/fire", CHAN_WEAPON);
			A_ZoomFactor(0.9,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
			
			// The actual attack and sprite trail
			A_RailAttack(100,0,1,"Blue","White",RGF_SILENT,0,"FDM_RailPuff",0,0,8192,35,16,1.0,"FDM_RailTrail",4);
			
			// Wee little particle core
			A_RailAttack(0,0,0,"","White",RGF_SILENT,0,"",0,0,8192,35,1.0,1.0,"",4);
			
		}
		RAIL B 1 BRIGHT Offset (0,40) A_ZoomFactor(0.91,ZOOM_NOSCALETURNING);
		RAIL C 1 BRIGHT Offset (0,40) A_ZoomFactor(0.92,ZOOM_NOSCALETURNING);
		RAIL C 1 BRIGHT Offset (0,39) A_ZoomFactor(0.93,ZOOM_NOSCALETURNING);
		RAIL D 1 BRIGHT Offset (0,37) A_ZoomFactor(0.94,ZOOM_NOSCALETURNING);
		RAIL D 1 BRIGHT Offset (0,35) A_ZoomFactor(0.95,ZOOM_NOSCALETURNING);
		RAIL E 1 BRIGHT Offset (-1,33) A_ZoomFactor(0.96,ZOOM_NOSCALETURNING);
		RAIL E 1 BRIGHT Offset (-3,32) A_ZoomFactor(0.97,ZOOM_NOSCALETURNING);
		RAIL F 1 BRIGHT Offset (-5,33) A_ZoomFactor(0.98,ZOOM_NOSCALETURNING);
		RAIL F 1 BRIGHT Offset (-7,34) A_ZoomFactor(0.99,ZOOM_NOSCALETURNING);
		RAIL F 1 BRIGHT Offset (-8,35) A_ZoomFactor(1.0,ZOOM_NOSCALETURNING);
		RAIL F 1 BRIGHT Offset (-9,35);
		RAIL F 18;
		RAIL F 1 BRIGHT Offset (-9,35);
		RAIL F 1 BRIGHT Offset (-8,35);
		RAIL F 1 BRIGHT Offset (-7,34);
		RAIL F 1 BRIGHT Offset (-5,33);
		RAIL F 1 BRIGHT Offset (-3,32);
		RAIL F 1 BRIGHT Offset (0,32);
		RAIL A 1 A_ReFire;
		Goto Ready;
	Flash:
		TNT1 A 4 Bright A_Light1;
		TNT1 B 3 Bright A_Light2;
		Goto LightDone;
	Spawn:
		RAIL Z -1;
		Stop;
	}
}

class FDM_RailTrail : Actor
{
	Default
	{
		+NOBLOCKMAP
		+NOGRAVITY
		RenderStyle "Add";
		//Alpha 0.5;
		+FLATSPRITE
		+ROLLSPRITE
		scale 0.15;
	}
	States
	{
	Spawn:
		RTRA A 0 NoDelay
		{
			int iroll = random(0,3);
			roll = iroll * 90;
			pitch = pitch + 90;
		}
		RTRA ABCDEFGHIJKLMNOP 2 Bright;
		Stop;
	}
}

class FDM_RailPuff : Actor
{
	Default
	{
		+NOBLOCKMAP
		+NOGRAVITY
		+ALWAYSPUFF
		+PUFFONACTORS
		+PUFFGETSOWNER
		RenderStyle "Add";
		//Alpha 0.5;
		speed 5;
		radius 1;
		height 1;
		+EXTREMEDEATH;
		decal "StarSoldierPlasmaScorch";
	}
	States
	{
	Spawn: // Hit Actor
		PUFF A 0;
		PUFF A 0 A_PlaySound("weapons/railgun/hitactor");
		//RIMP ABCDEFGHI 2 Bright;
		Stop;
	Crash: // Hit World
		PUFF A 0;
		PUFF A 0 
		{
			A_PlaySound("weapons/railgun/hitwall");
			
			FLineTraceData SurfaceData;
			target.LineTrace(target.angle, 2048, target.pitch, TRF_THRUACTORS, offsetz: 32, data:SurfaceData);
			
			// Massive thanks to Kodi and Phantombeta for making this work!
			if (SurfaceData.HitType == SurfaceData.TRACE_HitWall)
			{
				bWALLSPRITE = 1;
				angle = atan2(SurfaceData.HitLine.delta.Y, SurfaceData.HitLine.delta.X) - 90;
				let offs = AngleToVector (angle, 0.1); // .1 mu should be enough to get rid of Z fighting. 
				if (SurfaceData.LineSide)
				{
					offs = -offs;
				}
				SetOrigin (Vec3Offset (offs.x, offs.y, 0), false);
			} else if(SurfaceData.HitType == SurfaceData.TRACE_HitFloor || SurfaceData.HitType == SurfaceData.TRACE_HitCeiling)
			{
				bFLATSPRITE = 1;
			}
		}
		RIMP ABCDEFGHI 2 Bright;
		Stop;
	}
}