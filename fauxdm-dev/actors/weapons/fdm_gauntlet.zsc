class FDM_Gauntlet : FDM_BaseWeapon
{
	Default
	{
		Weapon.SelectionOrder 3700;
		Weapon.Kickback 100;
		Inventory.PickupMessage "$GOTGAUNTLET";
		Obituary "$OB_MPCHAINSAW";
		Tag "$TAGGAUNTLET";
		+WEAPON.MELEEWEAPON	
		damagetype "Gauntlet";
		//$Title "Gauntlet"
	}
	States
	{
	Ready:
		GNTL A 1 A_WeaponReady;
		Loop;
	Deselect:
		GNTL A 1 A_DeselectionShit();
		"####" A 1 A_WeaponOffset(0,33,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,35,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,39,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,44,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,49,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,55,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,60,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,70,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,80,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,90,WOF_INTERPOLATE);
	FinishDeselect:
		"####" A 0 A_Lower;
		Loop;
	Select:
		GNTL A 1 A_WeaponOffset(0,90,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,80,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,70,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,60,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,55,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,49,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,44,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,39,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,35,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,33,WOF_INTERPOLATE);
		"####" A 1 A_WeaponOffset(0,32,WOF_INTERPOLATE);
		"####" A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE);
		goto Ready;
	Fire:
		GNTL B 0 A_JumpIfInventory("PowerStrength", 1, "FireSuper");
		GNTL B 1 
		{
			A_CustomPunch ((20), 1, CPF_NOTURN, "FDM_GauntletPuff", 64, 0, 0, "ArmorBonus", "weapons/gauntlet/hit");
			A_WeaponOffset(random(-2,2),random(32,34),WOF_INTERPOLATE);
			A_PlaySound("weapons/gauntlet/loop", CHAN_6, 1.0, 1);
			A_QuadNoise();
		}
		GNTL BCCDD 1
		{
			A_WeaponOffset(random(-2,2),random(32,34),WOF_INTERPOLATE);
		}
		GNTL B 0 A_ReFire;
		GNTL B 0
		{
			A_StopSound(CHAN_6);
			A_WeaponOffset(0,32,WOF_INTERPOLATE);
		}
		Goto Ready;
	FireSuper:
		GNTL B 1 
		{
			A_CustomPunch ((20), 1, 0, "FDM_GauntletPuff", 64, 0, 0, "ArmorBonus", "weapons/gauntlet/hit");
			A_WeaponOffset(random(-8,8),random(32,34),WOF_INTERPOLATE);
			A_PlaySound("weapons/gauntlet/loopx", CHAN_6, 1.0, 1);
			A_QuadNoise();
		}
		GNTL BCCDD 1
		{
			A_WeaponOffset(random(-8,8),random(32,34),WOF_INTERPOLATE);
			A_CustomPunch ((20), 1,0, "FDM_GauntletPuff", 64, 0, 0, "ArmorBonus", "weapons/gauntlet/hit");
			A_QuadNoise();
		}
		GNTL B 0 A_ReFire;
		GNTL B 0
		{
			A_StopSound(CHAN_6);
			A_WeaponOffset(0,32,WOF_INTERPOLATE);
		}
		Goto Ready;
	Spawn:
		GNTL Z -1;
		Stop;
	}
}

class FDM_GauntletPuff : Actor
{
	Default
	{
		+NOBLOCKMAP
		+NOGRAVITY
		+ALLOWPARTICLES
		+RANDOMIZE
		+ZDOOMTRANS
		RenderStyle "Translucent";
		Alpha 0.5;
		VSpeed 1;
		Mass 5;
		damagetype "Gauntlet";
		decal "StarSoldierSawHit";
	}
	States
	{
	Spawn:
		PUFF A 0 Bright;
		PUFF A 4 Bright 
		{
			A_PlaySound("weapons/gauntlet/wall", CHAN_6);
			
			for (int i; i < 3; i++)
			{
				A_SpawnParticle("ffc400",SPF_RELATIVE|SPF_FULLBRIGHT,random(0,56),random(3,8),0,0,-8,0,frandom(2.0,-2.0),frandom(2.0,-2.0),frandom(1,8),0,0,-0.4);
				A_SpawnParticle("ff8a00",SPF_RELATIVE|SPF_FULLBRIGHT,random(0,56),random(3,8),0,0,-8,0,frandom(2.0,-2.0),frandom(2.0,-2.0),frandom(1,8),0,0,-0.4);
			}
		}
		PUFF BCD 4;
		Stop;
	}
}